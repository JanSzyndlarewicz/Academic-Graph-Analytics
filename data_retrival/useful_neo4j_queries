Index papers by doi (named as 'id' in out graph)
CREATE INDEX FOR (p:Paper) ON (p.id)

-----------------------------------------------

Delete all nodes
MATCH (n) DETACH DELETE n

-----------------------------------------------

Delete only relationships
MATCH ()-[r]->()
DELETE r

-----------------------------------------------

Delete all nodes and relationships
MATCH (n) DETACH DELETE n

-----------------------------------------------

Delete all nodes of a specific label
MATCH (n:LabelName) DETACH DELETE n

-----------------------------------------------


Creating graph of countries

MATCH (base:Paper)-[:CITED_BY]->(cited:Paper)
WITH base.countries AS base_countries, cited.countries AS cited_countries
UNWIND base_countries AS base_country
UNWIND cited_countries AS cited_country
WITH base_country, cited_country, COUNT(*) AS citation_count
RETURN base_country, cited_country, citation_count
ORDER BY citation_count DESC

MATCH (base:Paper)-[:CITED_BY]->(cited:Paper)
WITH base.countries AS base_countries, cited.countries AS cited_countries
UNWIND base_countries AS base_country
UNWIND cited_countries AS cited_country
MERGE (bc:Country {name: base_country})
MERGE (cc:Country {name: cited_country})
MERGE (bc)-[r:COUNTRY_CITED_BY]->(cc)
ON CREATE SET r.weight = 1
ON MATCH SET r.weight = r.weight + 1

-----------------------------------------------

Creating graph of unis

MATCH (base:Paper)-[:CITED_BY]->(cited:Paper)
WITH base.universities AS base_universities, cited.universities AS cited_universities
UNWIND base_universities AS base_university
UNWIND cited_universities AS cited_university
WITH base_university, cited_university, COUNT(*) AS citation_count
RETURN base_university, cited_university, citation_count
ORDER BY citation_count DESC

MATCH (base:Paper)-[:CITED_BY]->(cited:Paper)
WITH base.universities AS base_universities, cited.universities AS cited_universities
UNWIND base_universities AS base_university
UNWIND cited_universities AS cited_university
MERGE (bc:University {name: base_university})
MERGE (cc:University {name: cited_university})
MERGE (bc)-[r:UNIVERSITY_CITED_BY]->(cc)
ON CREATE SET r.weight = 1
ON MATCH SET r.weight = r.weight + 1

-----------------------------------------------

Counting total connections between countries

MATCH (c:Country)-[r_out:CITED_BY]->()
WITH c, SUM(r_out.weight) AS outgoing_weight
MATCH (c)<-[r_in:CITED_BY]-()
WITH c, outgoing_weight, SUM(r_in.weight) AS incoming_weight
SET c.total_connections = COALESCE(outgoing_weight, 0) + COALESCE(incoming_weight, 0)
RETURN c.name AS Country, c.total_connections AS TotalConnections
ORDER BY TotalConnections DESC

-----------------------------------------------

Get edges originating from nodes within a given timespan
MATCH (a:Paper)-[e]->(b:Paper)
WHERE DATE(a.publication_date) < DATE("2022-01-01") AND DATE(a.publication_date) > DATE("2021-01-01")
RETURN e

-----------------------------------------------

Create a graph of countries with citations only from a particular timespan
Replace the dates with limits of your time period and _2021 with a descriptive label
MATCH (base:Paper)-[:CITES]->(cited:Paper)
WHERE DATE(base.publication_date) < DATE("2022-01-01") AND DATE(base.publication_date) > DATE("2021-01-01")
WITH base.countries AS base_countries, cited.countries AS cited_countries
UNWIND base_countries AS base_country
UNWIND cited_countries AS cited_country
MERGE (bc:Country_2021 {name: base_country})
MERGE (cc:Country_2021 {name: cited_country})
MERGE (bc)-[r:CITED_BY]->(cc)
ON CREATE SET r.weight = 1
ON MATCH SET r.weight = r.weight + 1

-----------------------------------------------

Create a graph of countries with citations only up to a particular date
Replace the date with the limit of your time period and Y1 with a descriptive label
MATCH (base:Paper)-[:CITES]->(cited:Paper)
WHERE DATE(base.publication_date) < DATE("2022-01-01")
WITH base.countries AS base_countries, cited.countries AS cited_countries
UNWIND base_countries AS base_country
UNWIND cited_countries AS cited_country
MERGE (bc:Country_2022 {name: base_country})
MERGE (cc:Country_2022 {name: cited_country})
MERGE (bc)-[r:CITED_BY]->(cc)
ON CREATE SET r.weight = 1
ON MATCH SET r.weight = r.weight + 1

-----------------------------------------------
Calculate and assign normalized weights

match (n:Country)-[e:COUNTRY_CITED_BY]->()
with n,sum(e.weight) as outdegree
match (n)-[e:COUNTRY_CITED_BY]->(k:Country)
set e.normalized_weight = e.weight * 1.0 / outdegree

match (n:Country)-[e:COUNTRY_CITES]->()
with n,sum(e.weight) as outdegree
match (n)-[e:COUNTRY_CITES]->(k:Country)
set e.normalized_weight = e.weight * 1.0 / outdegree

-----------------------------------------------
Get the fraction of internal citations for each country across the years
match (n:Country_Y20)-[e]->(n) 
with n.name as country_name, e.normalized_weight as Y20
match (n:Country_Y21 {name:country_name})-[e]->(n)
with country_name, Y20, e.normalized_weight as Y21
match (n:Country_Y22 {name:country_name})-[e]->(n)
with country_name, Y20, Y21, e.normalized_weight as Y22
match (n:Country_Y23 {name:country_name})-[e]->(n)
with country_name, Y20, Y21, Y22, e.normalized_weight as Y23
match (n:Country_Y24 {name:country_name})-[e]->(n)
with country_name, Y20, Y21, Y22, Y23, e.normalized_weight as Y24
match (n:Country_Y25 {name:country_name})-[e]->(n)
with country_name, Y20, Y21, Y22, Y23, Y24, e.normalized_weight as Y25
return country_name, Y20, Y21, Y22, Y23, Y24, Y25

Get the fraction of citation to russia across the years
match (n:Country_Y20)-[e]->(:Country_Y20{name:"Russia"}) 
with n.name as country_name, e.normalized_weight as Y20
match (n:Country_Y21 {name:country_name})-[e]->(:Country_Y21{name:"Russia"})
with country_name, Y20, e.normalized_weight as Y21
match (n:Country_Y22 {name:country_name})-[e]->(:Country_Y22{name:"Russia"})
with country_name, Y20, Y21, e.normalized_weight as Y22
match (n:Country_Y23 {name:country_name})-[e]->(:Country_Y23{name:"Russia"})
with country_name, Y20, Y21, Y22, e.normalized_weight as Y23
match (n:Country_Y24 {name:country_name})-[e]->(:Country_Y24{name:"Russia"})
with country_name, Y20, Y21, Y22, Y23, e.normalized_weight as Y24
match (n:Country_Y25 {name:country_name})-[e]->(:Country_Y25{name:"Russia"})
with country_name, Y20, Y21, Y22, Y23, Y24, e.normalized_weight as Y25
return country_name, Y20, Y21, Y22, Y23, Y24, Y25

Get the yearly percentage increase in the fraction of citations to russia across the years
match (n:Country_Y20)-[e]->(:Country_Y20{name:"Russia"}) 
with n.name as country_name, e.normalized_weight as Y20
match (n:Country_Y21 {name:country_name})-[e]->(:Country_Y21{name:"Russia"})
with country_name, Y20, e.normalized_weight as Y21
match (n:Country_Y22 {name:country_name})-[e]->(:Country_Y22{name:"Russia"})
with country_name, Y20, Y21, e.normalized_weight as Y22
match (n:Country_Y23 {name:country_name})-[e]->(:Country_Y23{name:"Russia"})
with country_name, Y20, Y21, Y22, e.normalized_weight as Y23
match (n:Country_Y24 {name:country_name})-[e]->(:Country_Y24{name:"Russia"})
with country_name, Y20, Y21, Y22, Y23, e.normalized_weight as Y24
match (n:Country_Y25 {name:country_name})-[e]->(:Country_Y25{name:"Russia"})
with country_name, Y20, Y21, Y22, Y23, Y24, e.normalized_weight as Y25
return country_name, (Y21 - Y20) * 100.0 / Y20 as D21, (Y22 - Y21) * 100.0 / Y21 as D22, (Y23 - Y22) * 100.0 / Y22 as D23, (Y24 - Y23) * 100.0 / Y23 as D24, (Y25 - Y24) * 100.0 / Y24 as D25

Get the percentage increase from the beginning date in the fraction of citations to russia across the years
match (n:Country_Y20)-[e]->(:Country_Y20{name:"Russia"}) 
with n.name as country_name, e.normalized_weight as Y20
match (n:Country_Y21 {name:country_name})-[e]->(:Country_Y21{name:"Russia"})
with country_name, Y20, e.normalized_weight as Y21
match (n:Country_Y22 {name:country_name})-[e]->(:Country_Y22{name:"Russia"})
with country_name, Y20, Y21, e.normalized_weight as Y22
match (n:Country_Y23 {name:country_name})-[e]->(:Country_Y23{name:"Russia"})
with country_name, Y20, Y21, Y22, e.normalized_weight as Y23
match (n:Country_Y24 {name:country_name})-[e]->(:Country_Y24{name:"Russia"})
with country_name, Y20, Y21, Y22, Y23, e.normalized_weight as Y24
match (n:Country_Y25 {name:country_name})-[e]->(:Country_Y25{name:"Russia"})
with country_name, Y20, Y21, Y22, Y23, Y24, e.normalized_weight as Y25
return country_name, (Y21 - Y20) * 100.0 / Y20 as D21, (Y22 - Y20) * 100.0 / Y21 as D22, (Y23 - Y20) * 100.0 / Y22 as D23, (Y24 - Y20) * 100.0 / Y23 as D24, (Y25 - Y20) * 100.0 / Y24 as D25

-----------------------------------------------
Splitting the graph based on year using properties instead of labels

with ["2020", "2021", "2022", "2023", "2024", "2025"] as years
unwind years as year
MATCH (base:Paper)-[:CITES]->(cited:Paper)
WHERE DATE(base.publication_date) < DATE(year+"-01-01")
WITH year, base.countries AS base_countries, cited.countries AS cited_countries
UNWIND base_countries AS base_country
UNWIND cited_countries AS cited_country
MERGE (bc:Country {name: base_country, bucket: year})
MERGE (cc:Country {name: cited_country, bucket: year})
MERGE (bc)-[r:COUNTRY_CITED_BY]->(cc)
ON CREATE SET r.weight = 1
ON MATCH SET r.weight = r.weight + 1
MERGE (cc)-[s:COUNTRY_CITES]->(bc)
ON CREATE SET s.weight = 1
ON MATCH SET s.weight = r.weight + 1

Get fractions for each country how much did that country cite russia

with ["2020", "2021", "2022", "2023", "2024", "2025"] as years
unwind years as year
match (n:Country {bucket:year})-[e:COUNTRY_CITES]->(:Country{name:"Russia"})
return n.name, year, e.normalized_weight
order by n.name

Get fractions for each country how much that country cited itself

with ["2020", "2021", "2022", "2023", "2024", "2025"] as years
unwind years as year
match (n:Country {bucket:year})-[e:COUNTRY_CITES]->(n)
return n.name, year, e.normalized_weight

-----------------------------------------------
Get country connections between papers published in specific timespan

MATCH (cited:Paper)-[:CITED_BY]->(base:Paper)
WHERE DATE(base.publication_date) < DATE("2020-01-01") AND DATE(base.publication_date) > DATE("2019-01-01")
WITH base.countries AS base_countries, cited.countries AS cited_countries
UNWIND base_countries AS base_country
UNWIND cited_countries AS cited_country
MERGE (bc:Country_2019 {name: base_country})
MERGE (cc:Country_2019 {name: cited_country})
MERGE (bc)-[r:COUNTRY_CITED_BY]->(cc)
ON CREATE SET r.weight = 1
ON MATCH SET r.weight = r.weight + 1

-----------------------------------------------
Create reverse connections

match (n:Paper)-[e:CITED_BY]->(k:Paper)
create (k)-[:CITES]->(n)

match (n:Country)-[e:COUNTRY_CITED_BY]->(k:Country)
create (k)-[:COUNTRY_CITES {weight:e.weight}]->(n)